
 - name: remove old python kernelspecs for yarn cluster mode
   file:
     path: "{{ jupyter_kernelspec_location }}/spark_python_yarn_cluster"
     state: absent

 - name: remove old python kernelspecs for yarn client mode
   file:
     path: "{{ jupyter_kernelspec_location }}/spark_python_yarn_client"
     state: absent

 - name: create placeholder for python kernelspec in yarn cluster mode
   file:
    path: "{{ jupyter_kernelspec_location }}/spark_python_yarn_cluster"
    state: directory
    owner: "{{ notebook.user }}"
    group: "{{ notebook.user }}"

 - name: create placeholder for python kernelspec in yarn client mode
   file:
    path: "{{ jupyter_kernelspec_location }}/spark_python_yarn_client"
    state: directory
    owner: "{{ notebook.user }}"
    group: "{{ notebook.user }}"

 - name: update python kernelspecs for yearn cluster mode
   shell: "tar -zxvf {{ install_temp_dir }}/{{ kernelspec_archive }} --strip 1 --directory {{ jupyter_kernelspec_location }}/spark_python_yarn_cluster spark_python_yarn_cluster"
   ignore_errors: yes

 - name: update python kernelspecs for yarn client mode
   shell: "tar -zxvf {{ install_temp_dir }}/{{ kernelspec_archive }} --strip 1 --directory {{ jupyter_kernelspec_location }}/spark_python_yarn_client spark_python_yarn_client"
   ignore_errors: yes

# - name: disable impersonation based on configuration - Python kernel (only applies to cluster mode)
#   shell: " sed -i 's/ --proxy-user ${KERNEL_USERNAME:-ERROR__NO__KERNEL_USERNAME}//g' {{ jupyter_kernelspec_location }}/spark_python_yarn_cluster/kernel.json"
#   ignore_errors: yes
#   when: (notebook.enable_impersonation == false) and ((inventory_hostname in groups['master']) or (notebook.deploy_kernelspecs_to_workers == true))