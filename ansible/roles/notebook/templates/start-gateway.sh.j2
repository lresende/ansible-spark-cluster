#!/bin/bash

timestamp() {
  date +"%Y-%m-%d"
}

if [ "$(whoami)" != "{{ notebook.user }}" ]; then
        echo "Script must be run as user: {{ notebook.user }}"
        exit -1
fi

{% if security.enable_kerberos == true %}
if ! klist -s
then
    echo "INVALID Kerberos ticket; please run kinit"
    exit 1
fi
{% endif %}

unset XDG_RUNTIME_DIR
export EG_REMOTE_HOSTS={{ hostvars.values()|map(attribute='inventory_hostname')|join(',') }}
export EG_REMOTE_USER={{ notebook.user }}
# provide password if passwordless ssh is not configured
#export EG_REMOTE_PWD=

export EG_ENABLE_TUNNELING=FALSE

export EG_YARN_ENDPOINT=http://{{ notebook.yarn_endpoint_host }}:8088/ws/v1/cluster

export EG_PROXY_LAUNCH_LOG=/var/log/enterprise_gateway_proxy_launch_$(timestamp).log

export EG_KERNEL_LAUNCH_TIMEOUT=40

{% if security.enable_kerberos == true %}
export EG_IMPERSONATION_ENABLED=true
{% endif %}

START_CMD="{{ jupyter }} enterprisegateway --ip=0.0.0.0 --port=8888 --port_retries=0 --log-level=DEBUG --MappingKernelManager.cull_idle_timeout=600 --MappingKernelManager.cull_interval=30 --JupyterWebsocketPersonality.list_kernels=True"

# Enable white list of kernels...
#WHITE_LIST=--KernelSpecManager.whitelist="['spark_python_yarn_cluster','spark_r_yarn_cluster','spark_scala_yarn_cluster','spark_python_yarn_client','spark_r_yarn_client','spark_scala_yarn_client']"

LOG={{ notebook.gateway_log_directory }}/enterprise_gateway_$(timestamp).log
PIDFILE={{ notebook.gateway_runtime_directory }}/enterprise_gateway.pid

$START_CMD $WHITE_LIST > $LOG 2>&1 &
if [ "$?" -eq 0 ]; then
  echo $! > $PIDFILE
  exit 0
fi

exit 1
